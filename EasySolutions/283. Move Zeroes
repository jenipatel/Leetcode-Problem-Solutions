Problem: Given an array nums, write a function to move all 0's to the end of it while maintaining 
         the relative order of the non-zero elements.

Example: Input: [0,1,0,3,12]
         Output: [1,3,12,0,0]
         
Note:
1. You must do this in-place without making a copy of the array.
2. Minimize the total number of operations.



Solution:
Runtime: 0 ms
Memory Usage: 35.8 MB
************************************************************************************************
class Solution {
    public void moveZeroes(int[] nums) {
        int index = 0;
		    // Move all the non-zero integers to the left of the array
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                nums[index] = nums[i];
                index++;
            } 
        }
		    // Count the zeroes in an array and move them to the right side of the array
        for (int j = index; j < nums.length; j++) {
            nums[j] = 0;
        }
    }
}
************************************************************************************************
